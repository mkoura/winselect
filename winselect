#!/bin/sh

##
## Display list of windows managed by the window manager (using dmenu) and switch to the selected window.
##
## When launched with '-c' option, display only windows on current desktop.
##
## Author: Martin Kourim <misc.kourim@gmail.com>
## License: Public Domain


curdonly=0

case "$1" in
  '-c'|'c') curdonly=1 ; shift ;;
  '-help'|'--help'|'help') echo "usage: ${0##*/} [-c] [--help] DMENU_OPTIONS" >&2; exit 0 ;;
esac

type wmctrl >/dev/null 2>&1 || { echo "wmctrl command missing"; exit 1; }
type dmenu  >/dev/null 2>&1 || { echo "dmenu command missing"; exit 1; }


# current desktop id
cur_desktop="$(wmctrl -d | while read num curr dis; do [ "$curr" = "*" ] && { echo "$num"; break; }; done)"


# print window title or class
print_win() {
  rv=1
  if [ "$curdonly" = 1 ]; then
    # print only windows on current desktop or sticky windows when "-c" was specified
    if [ "$1" = "$cur_desktop" -o "$1" = '-1' ]; then
      echo "${3}: $2"
      rv=0
    fi
  else
    echo "${3}: $2"
    rv=0
  fi
  return "$rv"
}


# use wmctrl to display list of running clients and their window titles
# prefixed with desktop number
winlist() {
  {
    # titles of all windows
    i=1
    wmctrl -l -x | while read id num class mach title; do
      if [ "${#title}" -le 40 ]; then
        tit="$title"
      else
        # if the window title is too long, replace the middle of the string with ...
        tit="$(echo "$title" | sed -n 's/^\(.\{14,17\}\).*\(.\{14,20\}\)$/\1...\2/p')"
      fi
      print_win "$num" "$tit" "$i" && i="$(($i + 1))"
    done
  } | tr '[:upper:]' '[:lower:]'
}


# match window title returned by dmenu with actual window and switch to it
winlist_match() {
  # create valid regular expression for window title matching
  str="$(sed 's/\.\.\./\.\*/;s/\[/\\[/g;s/\([]{}()+?$|^]\)/\\\1/g')"
  # window title
  tit="${str#*: }"
  # prefix number
  pref="${str%%: *}"
  [ -z "$tit" ] && return 0
  i=1
  wmctrl -l -x | while read id num class mach title; do
    # match only windows on current desktop or sticky windows when "-c" was specified
    [ "$curdonly" = 1 ] && [ "$num" != "$cur_desktop" -a "$num" != '-1' ] && continue
    # match window only if counter is >= prefix number
    [ "$i" -ge "$pref" ] || { i="$(($i + 1))"; continue; }
    # does the title match?
    echo "$title" | egrep -q -i "$tit" || continue
    # switch to selected window
    wmctrl -i -a "$id"
    break
done
}


winlist | dmenu "$@" | winlist_match


# vim: set noai et sr ts=2 sw=2 sts=2:
